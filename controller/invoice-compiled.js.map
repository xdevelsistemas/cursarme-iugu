{"version":3,"sources":["invoice.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AACb,MAAM,QAAQ,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACjD,MAAM,WAAW,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;;AAGpD,MAAM,CAAC,OAAO,GAAG,MAAM;AACnB,QAAI,UAAU,GAAG,EAAE,CAAC;;AAGpB,cAAU,CAAC,iBAAiB,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK;AACzC,YAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAC;AACtC,oBAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAC7F,IAAI,CAAC,AAAC,SAAS,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACrD,MAAK;AACF,eAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAChB;KACJ,CAAC;;AAEF,cAAU,CAAC,gBAAgB,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK;AACxC,YAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAC;AACtC,oBAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAC7F,IAAI,CAAC,AAAC,SAAS,IAAI;AAChB,iBAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,AAAC,EAAE,IAAK;AAC3B,+BAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAC,EAAE,CAAC,CAAA;iBACtE,CAAC,CAAC;;AAEH,mBAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAEhB,CAAC,CAAC;SACV,MAAK;AACF,eAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAChB;KACJ,CAAC;;AAIF,WAAO,UAAU,CAAC;CACrB,CAAC","file":"invoice-compiled.js","sourcesContent":["'use strict';\nconst parcelas = require('../model/xdukaBoleto');\nconst iuguInvoice = require('../model/iuguInvoice');\n\n\nmodule.exports = () => {\n    let controller = {};\n\n\n    controller.showxDukaInvoices = (req, res) => {\n        if (parcelas.unidades[req.params.unidade]){\n            parcelas.getInvoices(req.params.month,req.params.year,parcelas.unidades[req.params.unidade].query)\n                .then((recordset)=> res.json([recordset[0]]));\n        }else {\n            res.json([]);\n        }\n    };\n\n    controller.processaInvoices = (req, res) => {\n        if (parcelas.unidades[req.params.unidade]){\n            parcelas.getInvoices(req.params.month,req.params.year,parcelas.unidades[req.params.unidade].query)\n                .then((recordset)=> {\n                    [recordset[0]].forEach((el) => {\n                        iuguInvoice.createInvoice(parcelas.unidades[req.params.unidade],el)\n                    });\n\n                    res.json([]);\n\n                });\n        }else {\n            res.json([]);\n        }\n    };\n\n\n\n    return controller;\n};"]}
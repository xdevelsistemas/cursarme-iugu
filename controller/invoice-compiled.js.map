{"version":3,"sources":["invoice.js"],"names":[],"mappings":"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","file":"invoice-compiled.js","sourcesContent":["'use strict';\nconst parcelas = require('../model/xdukaBoleto');\nconst iuguInvoice = require('../model/iuguInvoice');\nconst _ = require('lodash');\nconst request = require('sync-request');\nlet  reErrStatus = /^[4|5]/;\nconst Promise = require(\"bluebird\");\n\n\n\n\n\n\n\nmodule.exports = () => {\n    let controller = {};\n\n\n    controller.showxDukaInvoices = (req, res) => {\n        if (parcelas.getUnidade(req.params.unidade)){\n            parcelas.getInvoices(req.params.month,req.params.year,parcelas.unidades[req.params.unidade].query)\n                .then((recordset)=> res.json([recordset[0]]));\n        }else {\n            res.json([]);\n        }\n    };\n\n\n    controller.showInvoice = (req,res) => {\n        if (parcelas.getUnidade(req.params.unidade)) {\n\n            const codUnidade = req.params.unidade;\n            const invoiceId = req.params.invoiceid;\n\n            iuguInvoice.getInvoice(parcelas.getUnidade(codUnidade),invoiceId)\n                .then((invoice) => {\n                    if (invoice && reErrStatus.test(invoice.statusCode)) {\n                        throw new Error(JSON.stringify(invoiceCreated.body));\n                    } else if (invoice) {\n                        return res.json(invoice.body)\n                    } else {\n                        return res.status(404).json({err : 'boleto nÃ£o encontrado'})\n                    }\n                })\n                .catch((err) => {\n                    throw  err;\n                });\n        }else {\n            throw Error('unidade nao configurada')\n        }\n    };\n\n    controller.invoiceDueDate = (req, res) => {\n\n        if (parcelas.getUnidade(req.params.unidade)) {\n            res.render('invoice',\n                {   unidade : req.params.unidade ,\n                    codmovimento : req.params.codmovimento,\n                    parcela : req.params.parcela\n                })\n        }else {\n            res.render('error', { error : { message : 'pagina nao encontrada' , status : '404'} })\n        }\n\n    };\n\n\n\n    controller.invoiceStatusChange = (req,res) => {\n\n        //{\n        //    \"data\": {\n        //    \"subscription_id\": \"F4115E5E28AE4CCA941FCCCCCABE9A0A\",\n        //        \"status\": \"paid\",\n        //        \"id\": \"1757E1D7FD5E410A9C563024250015BF\"\n        //},\n        //    \"event\": \"invoice.status_changed\"\n        //}\n\n        if (req.body.data &&\n            req.body.data.id &&\n            req.body.event &&\n            req.body.data.status &&\n            req.body.event == 'invoice.status_changed' &&\n            req.body.data.status == 'paid' &&\n            parcelas.getUnidade(req.params.unidade)\n        ) {\n\n            let invoiceid = req.body.data.id;\n            let unidade = parcelas.getUnidade(req.params.unidade);\n\n            iuguInvoice.getInvoice(unidade, invoiceid)\n                .then((response) => {\n                    let invoice = response.body;\n                    if (invoice.status === 'paid'){\n                        //total_paid_cents ???\n                        let  paidValue = invoice.paid_cents;\n                        let  paidDate = new Date(invoice.paid_at);\n                        return parcelas.payInvoice(invoiceid,paidValue,paidDate);\n                    }else {\n                        return Promise.resolve(null);\n                    }\n                })\n                .then(() => {\n                    res.json({msg: 'sucesso'});\n                })\n                .catch((err) => {\n                    if (err.message){\n                        res.status(500).json({msg: err.message});\n                    }else\n                    {\n                        res.status(500).json({msg: err});\n                    }\n                })\n\n        }else{\n            res.status(400).json({msg: \"informacao incompleta\"});\n        }\n\n\n\n\n\n    };\n\n\n    controller.testreturn = (req,res) => {\n        res.send('ok');\n    };\n\n\n\n\n\n    controller.processInvoice = (req, res) => {\n        if (parcelas.getUnidade(req.params.unidade)){\n\n            const codUnidade = req.params.unidade;\n            const codMovimento = req.params.movimento;\n            const parcela = req.params.parcela;\n\n\n\n            parcelas.invoiceControllerCall(codUnidade,codMovimento,parcela)\n                .then(() => res.status(201).json(\"transacao criada\"))\n                .catch((err) => {\n                    if (err.message){\n                        res.status(500).send(err.message);\n                    }else{\n                        res.status(500).json(err);\n                    }\n                });\n        }else {\n            res.status(400).json({err : 'unidade nÃ£o configurada'});\n        }\n    };\n\n    controller.processAllInvoices = (req, res, regenerate) => {\n        if (parcelas.getUnidade(req.params.unidade)){\n\n\n            const unidade = req.params.unidade;\n            const month = req.params.month;\n            const year = req.params.year;\n            let  methods = [];\n\n            parcelas\n                .getInvoices(month,year,parcelas.getUnidade(unidade).query,regenerate)\n                .then((recordset)=> {\n                    let totalItens = recordset.length;\n                    return Promise.reduce(recordset, (info, el) => {\n                        return parcelas.invoiceControllerCall(el.CodUnidade, el.CodMovimento, el.Parcela)\n                            .then(() => {\n                                console.log('----------------------');\n                                console.log('{} de {}'.format(info.total,recordset.length));\n                                console.log('----------------------');\n                                return {total: info.total + 1 , invoiceWithErrors: info.invoiceWithErrors };\n                            })\n                            .catch((err) => {\n                                console.log('problema com o boleto CodUnidade = {} /  CodMovimento = {} / Parcela = {} : {}'\n                                    .format(el.CodUnidade ,\n                                        el.CodMovimento,\n                                        el.Parcela,\n                                        err.message));\n                                info.invoiceWithErrors.push({invoice: el, error: err.message});\n                                return {total: info.total , invoiceWithErrors: info.invoiceWithErrors };\n                            });\n                    }, {total : 0,invoiceWithErrors:[]})\n                })\n                .then((info) => {\n                    res.status(201).json({msg : '{} boletos (re)gerados'.format(info.total) , invoiceErrors : info.invoiceWithErrors});\n                })\n                .catch((err) => {\n                    if (err.message){\n                        res.status(500).json({err : err.message});\n                    }else{\n                        res.status(500).json(err);\n                    }\n            });\n        }else {\n            res.status(400).json({ err : 'unidade nÃ£o configurada'});\n        }\n    };\n\n\n\n    return controller;\n};"]}
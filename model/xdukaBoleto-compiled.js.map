{"version":3,"sources":["xdukaBoleto.js"],"names":[],"mappings":"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","file":"xdukaBoleto-compiled.js","sourcesContent":["'use strict';\n//https://github.com/patriksimek/node-mssql#promise\nconst config = require('../config/mssql');\nconst mssql = require('mssql');\nconst iuguInvoice = require('./iuguInvoice');\nconst _ = require('lodash');\nlet format = require('string-format');\nformat.extend(String.prototype);\nlet  reErrStatus = /^[4|5]/;\n\n\nlet unidades = {\n    cariacica : {query : 'CodUnidade = 215', key: '6a15282aac50d771d858e6b86c64bcbe'},\n    sao_mateus : {query : 'CodUnidade in (217,221)', key: '6d08dc26f116940a11b70d3111c66a53'}\n};\n\nlet unidadesCodigos = {\n    '215' : 'cariacica',\n    '217' : 'sao_mateus',\n    '221' : 'sao_mateus'\n};\n\n/*\nusando retry\n* */\nlet connect = (config) => {\n    return mssql.connect(config).catch((err)=> {\n        console.log('falha em conexao {}'.format(err));\n        connect(config);\n    } )\n};\n\n\nlet getUnidade = (filter) => {\n    let xreturn = unidades[filter];\n\n    if (!xreturn){\n        xreturn = unidades[unidadesCodigos[filter]];\n    }\n    return xreturn;\n\n};\n\n\nlet invoiceControllerCall = (codUnidade,codMovimento,parcela)  => {\n\n    if (getUnidade(codUnidade)){\n\n        return getInvoice(codUnidade,codMovimento,parcela)\n            .then((invoices)=> {\n                return  Promise.all([iuguInvoice.createInvoice(getUnidade(codUnidade), invoices[0]),\n                    iuguInvoice.cancelInvoice(getUnidade(codUnidade), invoices[0].xDevCobId)]\n                )\n            })\n            .then((processed) => {\n                let invoiceCreated = processed[0];\n                let invoiceCanceled = processed[1];\n                if (invoiceCreated && reErrStatus.test(invoiceCreated.statusCode)) {\n                    throw new Error(JSON.stringify(invoiceCreated.body));\n                } else  if (invoiceCreated) {\n                    return addTransaction(invoiceCreated.body.id, invoiceCreated.body.secure_url,codUnidade, codMovimento, parcela)\n                } else {\n                    return Promise.resolve(null);\n                }\n            })\n            .catch((err) => {\n                throw  err;\n            });\n    }else {\n        throw Error('unidade nao configurada')\n    }\n};\n\n\nlet getInvoices = (month,year,unidadeQuery,reprocess) =>\n    connect(config)\n        .then(() => {\n            let query = `select *\n                        from xdevbi_financeiro where month(DataVencimento) = {}\n                        and  year(DataVencimento) = {}\n                        and Cancelada = 0\n                        and  PagoValor = 0\n                        and  Ajuizada = 0\n                        and  {}\n                        and ( (CodUnidade = 215 and CodCaixa in (2,3,6))\n                        or (CodUnidade = 217 and CodCaixa in (3))\n                        or (CodUnidade = 221 and CodCaixa in (2)))`;\n\n            if (!reprocess) {\n                query += ' and xDevCobId is null';\n            }\n\n\n            return new mssql.Request()\n                .query(query.format(month, year, unidadeQuery))\n        })\n        .then((result) => { mssql.close(); return Promise.resolve(result)})\n        .catch((err) => { mssql.close(); throw err;});\n\n\n\nlet addTransaction = (transactId,transactUrl,CodUnidade,CodMovimento,Parcela) =>\n    connect(config)\n        .then(() => {\n            return new mssql.Request()\n                .query(`INSERT into\n                        cntMovimentoParcelaIugu\n                        (CodUnidade, CodMovimento, Parcela, xDevCobId, xDevExternalUrl)\n                        VALUES ({},{},{},'{}','{}')`.format(CodUnidade, CodMovimento, Parcela,transactId,transactUrl))\n                .catch((err) => {\n                    throw err;\n                });\n        })\n        .then(() => {\n            return new mssql.Request()\n                .query(`UPDATE cntMovimentoParcela\n                        set xDevCobId = '{}',\n                        xDevExternalUrl = '{}'\n                        where CodUnidade = {}\n                        and CodMovimento = {}\n                        and Parcela = {}`.format(transactId, transactUrl, CodUnidade, CodMovimento, Parcela))\n                .catch((err) => {\n                    throw err;\n                });\n        })\n        .then((result) => { mssql.close(); return Promise.resolve(result)})\n        .catch((err) => { mssql.close(); throw err;});\n\n\n\n\nlet getInvoice = (CodUnidade,CodMovimento,Parcela) =>\n    connect(config)\n        .then(() => new mssql.Request()\n            .query(`select *\n                        from xdevbi_financeiro where\n                        CodUnidade = {}\n                        and CodMovimento = {}\n                        and Parcela = {}\n                        `.format(CodUnidade,CodMovimento,Parcela)))\n        .then((result) => { mssql.close(); return Promise.resolve(result)})\n        .catch((err) => {\n            mssql.close();\n            throw err;\n        });\n\n\nlet payInvoice = (transactId,payValue,payDate) =>\n    connect(config)\n        .then(() => new mssql.Request()\n            .query(`select *\n                        from xdevbi_financeiro where\n                        xDevCobId = '{}'\n                        `.format(transactId)))\n        .then((result) => {\n            if (result && result.length > 0 ){\n                return Promise.resolve(result);\n            }else{\n                return new mssql.Request()\n                    .query(`select *\n                        from cntMovimentoParcelaIugu where\n                        xDevCobId = '{}'\n                        `.format(transactId))\n\n            }\n\n\n        })\n        .then((invoiceData) => {\n            if (invoiceData && invoiceData.length > 0 ){\n                let result = invoiceData[0];\n\n                let valorPago = payValue / 100;\n                let  msg = ('Pagamento realizado via Boleto do Iugu, valor de {} e Data de Pagamento de \"{}\" na parcela {}').format(valorPago.toString().replace('.',','),payDate.toString(), result.Parcela);\n\n                return new mssql.Request()\n                    .query(`insert into cntMovimentoLog\n                (CodUnidade, CodMovimento, Data, IDUsuário, LogMensagem)\n                VALUES  ({0},{1},getdate(), 6584 ,'{5}');\n                update cntMovimentoParcela set\n                PagoValor = {3},\n                PagoData  = CONVERT(char(30), '{4}',126)\n                where CodUnidade = {0}\n                and CodMovimento = {1}\n                and Parcela = {2}`.format(result.CodUnidade,result.CodMovimento,result.Parcela,valorPago,payDate.toISOString(),msg))\n            }else{\n                return Promise.reject(Error(\"a transação '{} não pode ser processada\".format(transactId)));\n            }\n        })\n        .then((result) => { mssql.close(); return Promise.resolve(result)})\n        .catch((err) => { mssql.close(); throw err;});\n\nmodule.exports = {\n    getUnidade : getUnidade,\n    getInvoices: getInvoices,\n    getInvoice : getInvoice,\n    addTransaction : addTransaction,\n    payInvoice: payInvoice,\n    invoiceControllerCall: invoiceControllerCall\n\n};\n"]}